# Generated by Django 4.2.7 on 2023-12-31 17:20

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserStateModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_description', models.CharField(max_length=50, verbose_name='User status')),
            ],
        ),
        migrations.CreateModel(
            name='WorkHoursModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200, verbose_name='Description of the change')),
                ('rate_of_pay', models.DecimalField(decimal_places=2, default=1.0, max_digits=3, verbose_name='Pay rate')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfileInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adhar_number', models.CharField(max_length=11, verbose_name='Aadhar')),
                ('street', models.CharField(max_length=200, verbose_name='Street')),
                ('city', models.CharField(max_length=200, verbose_name='City')),
                ('phone', models.CharField(max_length=20, verbose_name='Phone Number')),
                ('post_code', models.CharField(max_length=6, verbose_name='Zip code')),
                ('house_number', models.CharField(max_length=20, verbose_name='House number')),
                ('image', models.ImageField(blank=True, default=None, null=True, upload_to='avatars/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('user_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_manager', to=settings.AUTH_USER_MODEL, verbose_name='Manager')),
                ('user_state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_state', to='accounts.userstatemodel', verbose_name='User status')),
                ('user_work_hours', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_work_hours', to='accounts.workhoursmodel', verbose_name='Work hours')),
            ],
        ),
        migrations.CreateModel(
            name='UserAccessModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rfid', models.CharField(max_length=200, verbose_name='rfid')),
                ('comments', models.CharField(blank=True, max_length=500, null=True, verbose_name='comments')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_access', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
    ]
